-- SERVICES
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local LiveFolder = workspace:WaitForChild("Live")

-- GUI SETUP
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false

-- INTRO LABEL
local IntroLabel = Instance.new("TextLabel", ScreenGui)
IntroLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
IntroLabel.Position = UDim2.new(0.5, 0, 0.4, 0)
IntroLabel.AnchorPoint = Vector2.new(0.5, 0.5)
IntroLabel.BackgroundTransparency = 1
IntroLabel.Text = ""
IntroLabel.TextColor3 = Color3.new(1, 1, 1)
IntroLabel.Font = Enum.Font.FredokaOne
IntroLabel.TextScaled = true

-- BUTTON TOGGLE
local Toggle = Instance.new("TextButton")
Toggle.Size = UDim2.new(0, 160, 0, 50)
Toggle.Position = UDim2.new(0.5, -80, 0.8, 0)
Toggle.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
Toggle.Text = "Body Follow [OFF]"
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.new(1, 1, 1)
Toggle.Font = Enum.Font.SourceSansBold
Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
Toggle.Active = true
Toggle.Draggable = true
Toggle.AutoButtonColor = false
Toggle.BackgroundTransparency = 0.1
Toggle.Parent = ScreenGui
Toggle.Visible = false

local UICorner = Instance.new("UICorner", Toggle)
UICorner.CornerRadius = UDim.new(0, 12)

local UIGradient = Instance.new("UIGradient", Toggle)
UIGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 170, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(140, 100, 255))
}

-- SOUNDS
local typeSound = Instance.new("Sound")
typeSound.SoundId = "rbxassetid://7147420522"
typeSound.Volume = 15
typeSound.Parent = SoundService

local glitchSound = Instance.new("Sound")
glitchSound.SoundId = "rbxassetid://1588058260"
glitchSound.Volume = 15
glitchSound.Parent = SoundService

-- INTRO EFFECTS
local function typeText(text)
	for i = 1, #text do
		IntroLabel.Text = string.sub(text, 1, i)
		local s = typeSound:Clone()
		s.Parent = ScreenGui
		s:Play()
		game.Debris:AddItem(s, 1)
		task.wait(0.08)
	end
end

local function rainbowFlash(duration)
	local t = 0
	local speed = 0.2
	while t < duration do
		local h = tick() % 5 / 5
		local color = Color3.fromHSV(h, 1, 1)
		IntroLabel.TextColor3 = color
		task.wait(speed)
		t = t + speed
		speed = math.max(0.05, speed - 0.015)
	end
end

local function glitchText()
	for i = 1, 15 do
		IntroLabel.Text = string.char(math.random(65, 90)) .. string.char(math.random(65, 90)) .. string.char(math.random(65, 90))
		IntroLabel.TextColor3 = Color3.fromRGB(math.random(120,255), math.random(120,255), math.random(120,255))
		task.wait(0.04)
	end
end

-- INTRO SEQUENCE
typeText("FaceLock Script By YQANTG")
rainbowFlash(2.5)

local gs = glitchSound:Clone()
gs.Parent = ScreenGui
gs:Play()
game.Debris:AddItem(gs, 3)

-- GLITCH EFFECT
local glitchFrame = Instance.new("Frame")
glitchFrame.Size = UDim2.new(1, 0, 1, 0)
glitchFrame.BackgroundColor3 = Color3.new(1, 1, 1)
glitchFrame.BackgroundTransparency = 1
glitchFrame.ZIndex = 1000
glitchFrame.Parent = ScreenGui

task.spawn(function()
	for i = 1, 15 do
		glitchFrame.BackgroundColor3 = Color3.fromRGB(math.random(180,255), math.random(180,255), math.random(180,255))
		glitchFrame.BackgroundTransparency = math.random()
		task.wait(0.1)
	end
	glitchFrame:Destroy()
end)

glitchText()
IntroLabel:Destroy()

-- HIỆU ỨNG ẢNH PHÓNG TO
local image = Instance.new("ImageLabel")
image.Image = "rbxassetid://7713734565"
image.BackgroundTransparency = 1
image.Size = UDim2.new(0, 50, 0, 50)
image.Position = UDim2.new(0.5, -25, 0.5, -25)
image.AnchorPoint = Vector2.new(0.5, 0.5)
image.ZIndex = 999
image.Parent = ScreenGui

TweenService:Create(image, TweenInfo.new(1.2, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
	Size = UDim2.new(4, 0, 4, 0),
	Position = UDim2.new(0.5, 0, 0.5, 0)
}):Play()

task.delay(1.3, function()
	image:Destroy()
end)

Toggle.Visible = true
TweenService:Create(Toggle, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
	BackgroundTransparency = 0
}):Play()

-- FOLLOWING LOGIC
local isFollowing = false
local followConnection = nil
local currentHighlight = nil

local function getClosestTarget()
	local closest, shortest = nil, math.huge
	for _, model in pairs(LiveFolder:GetChildren()) do
		if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("Humanoid") and model ~= Character then
			if model.Name == "Weakest Dummy" or Players:GetPlayerFromCharacter(model) then
				local dist = (HumanoidRootPart.Position - model.HumanoidRootPart.Position).Magnitude
				if dist < shortest then
					shortest = dist
					closest = model
				end
			end
		end
	end
	return closest
end

local function addHighlight(target)
	local highlight = Instance.new("Highlight")
	highlight.Name = "BodyFollowHighlight"
	highlight.Adornee = target
	highlight.FillTransparency = 1
	highlight.OutlineColor = Color3.fromRGB(0, 170, 255)
	highlight.OutlineTransparency = 0
	highlight.Parent = target
	currentHighlight = highlight
end

local function removeHighlight()
	if currentHighlight then
		currentHighlight:Destroy()
		currentHighlight = nil
	end
end

local function startFollowing(target)
	if followConnection then followConnection:Disconnect() end
	addHighlight(target)
	followConnection = RunService.RenderStepped:Connect(function()
		if not Character or not Character:FindFirstChild("Humanoid") or Character.Humanoid.Health <= 0 then
			stopFollowing()
			return
		end
		if not target or not target:FindFirstChild("HumanoidRootPart") or not target:FindFirstChild("Humanoid") or target.Humanoid.Health <= 0 then
			stopFollowing()
			return
		end
		local myPos = HumanoidRootPart.Position
		local targetPos = target.HumanoidRootPart.Position
		targetPos = Vector3.new(targetPos.X, myPos.Y, targetPos.Z)
		HumanoidRootPart.CFrame = CFrame.new(myPos, targetPos)
	end)
end

function stopFollowing()
	isFollowing = false
	if followConnection then followConnection:Disconnect() end
	removeHighlight()
	Toggle.Text = "Body Follow [OFF]"
end

-- DRAG PROTECTION
local isDragging = false
local pressPos = nil

Toggle.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		isDragging = false
		pressPos = input.Position
	end
end)

Toggle.InputChanged:Connect(function(input)
	if pressPos and (input.Position - pressPos).Magnitude > 10 then
		isDragging = true
	end
end)

Toggle.InputEnded:Connect(function(input)
	if (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1) and not isDragging then
		if isFollowing then
			stopFollowing()
		else
			local target = getClosestTarget()
			if target then
				isFollowing = true
				Toggle.Text = "Body Follow [ON]"
				startFollowing(target)
			else
				Toggle.Text = "No Target"
				task.wait(1)
				Toggle.Text = "Body Follow [OFF]"
			end
		end
	end
end)
