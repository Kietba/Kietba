local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Animation ID c·∫ßn ch·∫∑n
local targetAnimationId = "rbxassetid://10470389827"
local blockEnabled = false
local isDragging = false

-- GUI ch√≠nh
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "BlockAnimationGui"
screenGui.ResetOnSpawn = false

-- N√∫t Toggle
local button = Instance.new("TextButton")
button.Name = "ToggleBlock"
button.Text = "üî¥ IVSBBlock: OFF"
button.Size = UDim2.new(0, 250, 0, 50)
button.Position = UDim2.new(0.5, -70, 0.5, -25)
button.AnchorPoint = Vector2.new(0.5, 0.5)
button.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.TextSize = 20
button.Font = Enum.Font.GothamBold
button.BorderSizePixel = 0
button.BackgroundTransparency = 0.1
button.Active = true
button.Draggable = true
button.Parent = screenGui
button.AutoButtonColor = false -- kh√¥ng thay ƒë·ªïi khi hover

-- Hi·ªáu ·ª©ng m∆∞·ª£t khi hi·ªán l√™n
button.Size = UDim2.new(0, 140, 0, 300)
button.Visible = false
task.wait(0.2)
button.Visible = true
game:GetService("TweenService"):Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
	Size = UDim2.new(0, 180, 0, 50)
}):Play()

-- Hi·ªáu ·ª©ng ƒë·∫πp nh·∫π
local uicorner = Instance.new("UICorner", button)
uicorner.CornerRadius = UDim.new(0, 12)

local shadow = Instance.new("UIStroke", button)
shadow.Thickness = 2
shadow.Color = Color3.fromRGB(150, 100, 255)

-- H√†m ch·∫∑n animation
local function blockAnimation(humanoid)
	for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
		if track.Animation and track.Animation.AnimationId == targetAnimationId then
			track:Stop()
			track:Destroy()
		end
	end
end

-- K√≠ch ho·∫°t ho·∫∑c hu·ª∑ k√≠ch ho·∫°t
local blockConnection = nil
local function toggleBlock(state)
	blockEnabled = state
	button.Text = blockEnabled and "üü¢ IVSBBlock: ON" or "üî¥ IVSBBlock: OFF"

	if blockEnabled then
		local function startBlocking()
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoid = char:WaitForChild("Humanoid")
			-- D·ª´ng li√™n t·ª•c ƒë·ªÉ ch·ªëng spam
			task.spawn(function()
				while blockEnabled and humanoid and humanoid.Parent do
					blockAnimation(humanoid)
					task.wait(0.05)
				end
			end)
			-- D·ª´ng ngay khi animation b·ªã ph√°t
			blockConnection = humanoid.AnimationPlayed:Connect(function(track)
				if track.Animation and track.Animation.AnimationId == targetAnimationId then
					track:Stop()
					track:Destroy()
				end
			end)
		end

		startBlocking()
		player.CharacterAdded:Connect(function()
			if blockEnabled then
				task.wait(1)
				startBlocking()
			end
		end)
	else
		-- Ng·∫Øt k·∫øt n·ªëi n·∫øu t·∫Øt
		if blockConnection then
			blockConnection:Disconnect()
			blockConnection = nil
		end
	end
end

-- B·∫£o v·ªá kh·ªèi b·ªã b·∫•m khi ƒëang k√©o
local userInput = game:GetService("UserInputService")

local dragStarted = false
button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragStarted = true
	end
end)

button.InputEnded:Connect(function(input)
	if dragStarted and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
		if not isDragging then
			-- N·∫øu kh√¥ng k√©o th√¨ m·ªõi toggle
			toggleBlock(not blockEnabled)
		end
		dragStarted = false
	end
end)

-- Ch·ªëng b·∫•m nh·∫ßm khi k√©o
button.MouseEnter:Connect(function()
	isDragging = false
end)

button.MouseMoved:Connect(function()
	isDragging = true
end)

button.MouseLeave:Connect(function()
	isDragging = false
end)
