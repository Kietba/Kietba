--üì¶ Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TrashcanGui"
screenGui.Enabled = false -- ·∫®n s·∫µn
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 200, 0, 50)
frame.Position = UDim2.new(0, 20, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

-- Bi·∫øn
local isEnabled = false
local hasSeenA, hasSeenBAfterA, wasBPlaying = false, false, false
local ANIM_A, ANIM_B = "13814919604", "13813448561"
local lastPartPos = Vector3.new(9999, 400, 9999)
local originalCFrame = nil
local savedOnce = false

-- Remote
local function sendRemotes()
	local char = LocalPlayer.Character
	if not char then return end
	local comm = char:FindFirstChild("Communicate")
	if not comm then return end
	comm:FireServer({ Goal = "LeftClick", Mobile = true })
	task.delay(0.1, function()
		if comm.Parent then
			comm:FireServer({ Goal = "LeftClickRelease", Mobile = true })
		end
	end)
end

local function getRandomTrashcan()
	local t = {}
	for _, v in ipairs(workspace:GetDescendants()) do
		if v:IsA("MeshPart") and v.Name == "Trashcan" and v.Parent and v.Parent.Name == "Trashcan" then
			table.insert(t, v)
		end
	end
	if #t > 0 then
		return t[math.random(1, #t)]
	end
end

local function teleportBehindTarget(part)
	local char = LocalPlayer.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	local back = part.CFrame.LookVector
	local behind = part.Position - back * 3
	hrp.CFrame = CFrame.new(behind, part.Position)
end

local function teleportToPart()
	local char = LocalPlayer.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local part = workspace:FindFirstChild("SafePlatform") or Instance.new("Part", workspace)
	part.Anchored = true
	part.Size = Vector3.new(10, 1, 10)
	part.Position = lastPartPos
	part.Name = "SafePlatform"
	part.BrickColor = BrickColor.Black()

	hrp.CFrame = CFrame.new(part.Position + Vector3.new(0, 5, 0))
end

local function isAnimationPlaying(id)
	local char = LocalPlayer.Character
	if not char then return false end
	local hum = char:FindFirstChildOfClass("Humanoid")
	if not hum then return false end
	local animator = hum:FindFirstChildWhichIsA("Animator")
	if not animator then return false end

	for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
		if track.Animation and string.find(track.Animation.AnimationId, id) then
			return true
		end
	end
	return false
end

local function findWeakPlayer()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local char = player.Character
			if char and char:FindFirstChild("Humanoid") and char:FindFirstChild("HumanoidRootPart") then
				local hp = char.Humanoid.Health
				if hp > 0 and hp < 20 then
					print("[üéØ] Ph√°t hi·ªán player y·∫øu:", player.Name, "HP:", hp)
					return char
				end
			end
		end
	end
end

local function followAndAttack()
	local target = findWeakPlayer()
	if not target then return end

	local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	local root = target:FindFirstChild("HumanoidRootPart")
	if not root then return end

	hrp.CFrame = CFrame.new(root.Position - root.CFrame.LookVector * 3, root.Position)
	sendRemotes()

	task.wait(1)

	if target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
		local trash = getRandomTrashcan()
		if trash then
			teleportBehindTarget(trash)
			task.wait(0.2)
			sendRemotes()
			task.wait(1)
			if root then
				hrp.CFrame = CFrame.new(root.Position - root.CFrame.LookVector * 3, root.Position)
				sendRemotes()
			end
		end
	else
		local trash = getRandomTrashcan()
		if trash then
			teleportBehindTarget(trash)
			task.wait(0.2)
			sendRemotes()
			task.wait(1)
			teleportToPart()
		end
	end
end

local function runSequence()
	local trash = getRandomTrashcan()
	if trash then
		teleportBehindTarget(trash)
		task.wait(0.2)
		sendRemotes()
		task.wait(2)
		teleportToPart()
		task.spawn(function()
			while isEnabled do
				followAndAttack()
				task.wait(1)
			end
		end)
	end
end

task.spawn(function()
	while true do
		task.wait(0.2)
		if isEnabled then
			local aPlaying = isAnimationPlaying(ANIM_A)
			local bPlaying = isAnimationPlaying(ANIM_B)

			if aPlaying then hasSeenA = true end
			if hasSeenA and bPlaying and not wasBPlaying then
				hasSeenBAfterA = true
			end

			if hasSeenA and hasSeenBAfterA and wasBPlaying and not bPlaying then
				task.wait(1)
				if isEnabled then
					runSequence()
				end
				hasSeenA, hasSeenBAfterA = false, false
			end

			wasBPlaying = bPlaying
		end
	end
end)

-- ‚úÖ T·∫°o toggle callback ƒë·ªÉ d√πng ngo√†i
local function toggleCallback(state)
	screenGui.Enabled = state
	isEnabled = state

	local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

	if state and not savedOnce then
		if hrp then
			originalCFrame = hrp.CFrame
			savedOnce = true
		end
		hasSeenA, hasSeenBAfterA, wasBPlaying = false, false, false
		runSequence()
	elseif not state and originalCFrame and hrp then
		task.wait(0.1)
		hrp.CFrame = originalCFrame
		savedOnce = false
	end
end

return screenGui, toggleCallback -- ‚¨ÖÔ∏è d√πng trong tab toggle
